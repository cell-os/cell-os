#!/bin/bash
# TODO add a header describing the overall idea and plan of improvement (proper cloud-init, etc.)
# default images mount the first ephemeral disk to /mnt
# this is from cloud-init config that comes with the cloud-init.rpm
umount /mnt
# set timezone
echo "UTC" > /etc/timezone
ln -sf /usr/share/zoneinfo/UTC /etc/localtime
setenforce 0

# install mustache gem for easy templating
gem install mustache
# install pip
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
python get-pip.py
# Downgrade pip to avoid https://github.com/pypa/pip/issues/3384
pip install --upgrade "certifi==2015.04.28" "pip==8.1.0" "awscli==1.9.21" "pystache==0.5.4" "pyyaml"

source /etc/profile.d/cellos.sh
# export vars
echo "export number_of_disks=$(/usr/local/bin/detect-and-mount-disks)" >> /etc/profile.d/cellos.sh
source /etc/profile.d/cellos.sh

report_status "role ${cell_role}"
report_status "seeds ${cell_modules},zk_barrier"
report_status "${cell_role} start"

[[ -x /usr/local/bin/prepare_${cell_backend} ]] && prepare_${cell_backend}

prepare_seeds

function do_provision {
    for module_path in /opt/cell/seed/*; do
        local provision_script="${module_path}/${1}"
        local module="$(basename $module_path)"
        if [[ "$cell_modules" == *"${module}"* ]]; then
            if [[ -x "${provision_script}" ]]; then
                report_status "${module} start"
                "${provision_script}" || {
                    report_status "${module} failed"
                    error_exit "Failed to deploy ${module}"
                }
                report_status "${module} end"
            fi
        fi
    done
}

# execute pre
do_provision provision

# wait for zk
report_status "zk_barrier start"
/usr/local/bin/zk-barrier
export zk=`zk-list-nodes 2>/dev/null`
report_status "zk_barrier end"

# execute post
do_provision provision_post

report_status "${cell_role} end"
success_exit

exit 0

