server {
  listen 80;
  server_name ~^mesos.(api|gw)\.(?<domain>.+);
  set_by_lua $mesos_uri 'return os.getenv("MESOS_MASTER_HOST") or "http://10.255.255.2:5050"';

  include /etc/api-gateway/conf.d/includes/resolvers.conf;

  location /check_mesos_state {
    internal;
    proxy_method GET;
    proxy_pass_request_body off;
    proxy_pass_request_headers off;
    proxy_pass $mesos_uri/master/state.json;
  }
  # API requests to retrieve slave data
  location ~ ^/slave/(?<slaveid>[0-9a-zA-Z-]+)(?<slaveport>:\d+)*(?<url>.*)$ {
    set $slave_address '';

    more_clear_input_headers Accept-Encoding;
    rewrite ^/slave/[0-9a-zA-Z-]+(:\d+)*/.*$ $url break;

    rewrite_by_lua "
      local response = ngx.location.capture('/check_mesos_state');
    local cjson = require 'cjson';
    local mesos_state = assert(cjson.decode(response.body),
                        'Could not decode ' .. tostring(response.body));

    for _, slave in ipairs(mesos_state['slaves']) do
          if slave['id'] == ngx.var.slaveid then
              ngx.var.slave_address = ngx.re.gsub(slave['pid'], '.*@', '', 'jo')
              ngx.log(ngx.DEBUG, 'Resolved slave to address ', tostring(ngx.var.slave_address) )
          end
      end
    ";

    proxy_pass http://$slave_address;
  }

  location = /master/state.json {
    if ( $is_admin_zone_ip = "0" ) {
      return 403;
    }
    set $proxy_forwarded_port $http_x_forwarded_port;
    set_if_empty $proxy_forwarded_port $server_port;

    content_by_lua "
      local cjson = require 'cjson';
        local response = ngx.location.capture('/check_mesos_state');
        local mesos_state = assert(cjson.decode(response.body),
                        'Could not decode ' .. tostring(response.body));

      -- for Mesos 0.25 UI we need to replace the hostname and the pid fields
      -- the issue if in this commit: https://github.com/apache/mesos/commit/8e13a26e8514ca8be904f91f0fcc4c2fc74d71bc#diff-9f2e9a08332888bca98d111787b3a8c3R770
      -- JS should not assume all the slaves are accessible on their private IP address, not to mention the IP
      for _, slave in ipairs(mesos_state['slaves']) do
          slave.hostname = ngx.var.host .. '/slave/' .. slave.id
          slave.pid = ngx.re.gsub( slave.pid, ':\\\\d+$', ':' .. ngx.var.proxy_forwarded_port, 'jo')
      end

      ngx.say( cjson.encode( mesos_state ) )
    ";
  }

  set $mesos_master '';
  location / {
    if ( $is_admin_zone_ip = "0" ) {
        return 403;
    }

    rewrite_by_lua "
      local cjson = require 'cjson';
      local response = ngx.location.capture('/check_mesos_state');
      --ngx.log(ngx.DEBUG, 'Mesos response:' , tostring(response.body) , ' from mesos_uri=', tostring(ngx.var.mesos_uri));
      local mesos_state = assert(cjson.decode(response.body),
                        'Could not decode ' .. tostring(response.body));
      ngx.var.mesos_master = ngx.re.gsub(mesos_state.leader, 'master@', '');
      --ngx.log(ngx.DEBUG, tostring(ngx.var.mesos_backend));
    ";

    proxy_pass http://$mesos_master;
  }
}

