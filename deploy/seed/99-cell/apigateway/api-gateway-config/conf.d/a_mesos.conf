server {
  listen 80;
  server_name ~^mesos.gw\.(?<domain>.+);
  set_by_lua $mesos_uri 'return os.getenv("MESOS_MASTER_HOST") or "http://10.255.255.2:5050"';

  include /etc/api-gateway/conf.d/includes/resolvers.conf;
  include /etc/api-gateway/conf.d/commons/common-headers.conf;

  include /etc/api-gateway/conf.d/includes/mesos-state.conf;

  location = /master/redirect {
    if ($is_admin_zone_ip = "0") {
      return 403;
    }

    # Mesos may return something like //ip-10-0-0-1.us-west-2.compute.internal:5050
    # returns a temporary redirect poiting to the gateway cell domain name i.e http://mesos.gw.my-cell.example.com
    return 307 $scheme://$host:$server_port;
  }

  # this location ensures that the request is always routed to the Mesos Leader
  #  in addition the response is decorated by updating the hostname for the slaves
  #  so that Mesos UI loads the slave info through the Gateway
  location ~ \/master\/state(\.json)?$ {
    if ($is_admin_zone_ip = "0") {
      return 403;
    }

    content_by_lua "
      local cjson = require 'cjson'
      local mesos_state_cls = require 'mesos.MesosState'
      local mesos_state = mesos_state_cls:new()

      local state = mesos_state:getState(true)

      ngx.header.content_type = 'application/json'

      -- take jsonp argument into consideration
      -- see https://issues.apache.org/jira/browse/MESOS-5911 for details
      local jsonp = ngx.var.arg_jsonp
      local response = cjson.encode(state)
      if (jsonp ~= nil and jsonp ~= '') then
        ngx.say(jsonp .. '(' .. response .. ')')
      else
        ngx.say(response)
      end
    ";
  }

  location / {
    if ($is_admin_zone_ip = "0") {
      return 403;
    }
    set $mesos_leader $mesos_uri;

    rewrite_by_lua "
      local mesos_state_cls = require 'mesos.MesosState'
      local mesos_state = mesos_state_cls:new()
      ngx.var.mesos_leader = mesos_state:getMesosLeader() or ngx.var.mesos_uri
    ";

    proxy_pass $mesos_leader;
  }
}

